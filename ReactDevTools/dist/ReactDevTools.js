function u(e){window.enmity.plugins.registerPlugin(e)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage;const i=window.enmity.modules.common.Toasts;window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList,o.Image,o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl,o.ScrollView,o.SectionList,o.StatusBar,o.StyleSheet,o.Switch,o.Text,o.TextInput,o.TouchableHighlight,o.TouchableOpacity,o.TouchableWithoutFeedback,o.Touchable;const w=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const c=o.FormDivider;o.FormHint,o.FormIcon;const d=o.FormInput;o.FormLabel,o.FormRadio;const s=o.FormRow,g=o.FormSection;o.FormSelect,o.FormSubLabel;const h=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;function l(e,t,m){return window.enmity.settings.get(e,t,m)}function r(e){return window.enmity.assets.getIDByName(e)}var y=({settings:e})=>(e.get("port")==null&&e.get("inputPort")==null&&e.set("inputPort","8097"),e.get("host")==null&&e.get("inputHost")==null&&e.set("inputHost","192.168."),n.createElement(w,null,n.createElement(g,{title:"Connection Settings"},n.createElement(d,{value:e.get("host","192.168."),title:"Host IP Address",placeholder:"192.168.0.1",onChange:t=>{e.set("inputHost",t)}}),n.createElement(c,null),n.createElement(d,{value:e.get("port","8097"),title:"Host Port",placeholder:"8097",onChange:t=>{e.set("inputPort",t)}}),n.createElement(c,null),n.createElement(s,{label:"Connect",trailing:s.Arrow,onPress:()=>{let t=l("ReactDevTools","inputHost"),m=l("ReactDevTools","inputPort"),a=!1;t.split(".").length>=4&&m.length>0?t.match(/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/)&&m.match(/^\d{1,5}$/)?(e.set("host",t),e.set("port",m),a=!0):i.open({content:"Invalid IP address or port",source:r("Small")}):i.open({content:"Invalid IP address or port",source:r("Small")}),a&&(i.open({content:`Connecting to ${t}:${m}`,source:r("check")}),window.connectToDevTools({host:`${t}`,port:`${m}`}))}}),n.createElement(c,null),n.createElement(s,{label:"Auto Connect",trailing:n.createElement(h,{value:e.getBoolean("autoConnect",!1),onValueChange:t=>{e.set("autoConnect",t)}})})),n.createElement(s,{label:"If establishing a connection with the host fails, please ensure your host IP address and port are correct."}),n.createElement(s,{label:"Your host's IP address and port can be found in the React DevTools window."}))),p="ReactDevTools",v="1.0.1",F="Enables the ability to use React DevTools when using the developer build of enmity.",S="#61dafb",T=[{name:"xenos",id:"925128443090313226"},{name:"another",id:"943910268486950913"}],b={name:p,version:v,description:F,color:S,authors:T};const C={...b,onStart(){if(l("ReactDevTools","autoConnect")){let e=l("ReactDevTools","host"),t=l("ReactDevTools","port");e==null||t==null?i.open({content:"You have auto connect turned on but haven't set a valid host or port!",source:r("Small")}):(i.open({content:`Connecting to ${e}:${t}`,source:r("check")}),window.connectToDevTools({host:`${e}`,port:`${t}`}))}},onStop(){},getSettingsPanel({settings:e}){return n.createElement(y,{settings:e})}};u(C);
